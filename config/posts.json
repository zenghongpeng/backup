{
  "posts": [
    {
      "content": "\n今天我们来看看Hexo是什么东西！！\n\n## 什么是Hexo\n官方说Hexo是一个快速、简洁且高效的博客框架，使用Markdown引擎解析文章，几秒内就可以生成一个静态网站。\n\nOK，官方都这么说了，那咱试试。\n\n## 机器配置\n- MacBook Pro (15-inch, 2019)\n- macOS Catalina 10.15.5\n- node v13.12.0\n- git  v2.24.3\n\n## 安装\n安装Hexo前提要安装好`Node.js`、`Git`，需要安装的同学请参考各官方的或者在百度上搜索哈，我想既然想用Hexo搭建网站，这些知识还是必要的。\nok，咱们继续。\n\n### 全局hexo安装\n```shell\n $ npm install -g hexo-cli # 全局安装\n```\n\n### 初始化目录\n```shell\n# $targetDir 是创建docs的目录\n$ mkdir docs &&  hexo init docs \n$ cd docs && npm init # or yarn \n```\nhexo 初始化好了，咱们看下目录结构。\n```shell\n # 我是用yarn安装的。\n├── _config.yml # 网站配置信息\n├── node_modules # node 依赖包\n├── package.json # 应用程序信息\n├── scaffolds # 模板文件夹\n├── source # 资源文件夹\n├── themes # 主题文件夹\n└── yarn.lock # 记录 yarn 安装依赖的版本\n```\n\n### 启动\nOK，初始化好了之后，该跑起来了。\n```shell\n# hexo3.0吧服务器独立成模块了，必须安装才能使用 `hexo server`\n$ cd docs\n$ npm install hexo-server # 安装服务器 # or yarn add hexo-server\n$ hexo server\n# 当看到这信息时表示启动成功了，打开`http://localhost:4000`就可以看到网站了。\n# => INFO  Start processing\n# => INFO  Hexo is running at http://localhost:4000 . Press Ctrl+C to stop.\n````\n\n### 生成静态文件\n```shell\n$ hexo generate\n```\n当目录中生成`public`目录时表示已经生成成功啦！接下我们要做的就是部署到 `Github Pages`\n\n### 部署\n\n- 创建 GitHub 账号，并创建一个仓库 Token。点击[GitHub](https://github.com/)，进行注册。登录 GitHub 之后，点击[这里](https://github.com/settings/tokens/new)创建一个 Token，勾选上 repo 的相关权限即可。生成之后记得把 Token 复制到你的本地，因为一旦关闭网页将不能再看到它。\n\n![](https://zenghongpeng.github.io/ruban.github.io/post-images/1594306458475.png)\n\n- **创建仓库，存放构建后的网站文件**。创建一个公开仓库，名为**用户名.github.io**。（将用户名替换为你的 GitHub 用户名）\n\n![](https://zenghongpeng.github.io/ruban.github.io/post-images/1594306591575.png)\n\n- 安装`hexo-deployer-git`\n```shell\n$ npm install hexo-deployer-git \n```\n- 打开**_config.yml**进行配置\n\n```shell\n# URL\n## If your site is put in a subdirectory, set url as 'http://yoursite.com/child' and root as '/child/'\nurl: https://用户名.github.io/hexo.github.io/\nroot: /用户名.github.io/\n\n# Deployment\n## Docs: https://hexo.io/docs/deployment.html\ndeploy:\n  type: git\n  repo: https://github.com/用户名/hexo.github.io # 这是第二步创建的仓库\n  branch: gh-pages\n  token: 'xxxx' # 这里是第一步生成的Token\n```\n\n- 运行 `hexo clean && hexo deploy `\n```shell\n$ hexo clean && hexo deploy # 部署 过程中可能会提示输入用户名和token \n```\n\n- ok 看看那是否部署上去了。\n![](https://zenghongpeng.github.io/ruban.github.io/post-images/1594307406513.png)\n\n部署成功，但是别着急，还有最后一步要配置。\n在仓库下找到`Settings`, 点击进入之后，找到`GitHub Pages`， 在`Source`中选择`gh-pages`分支. 访问`https://用户名.github.io/hexo.github.io/`\n\n![](https://zenghongpeng.github.io/ruban.github.io/post-images/1594309747382.png)\n\n![](https://zenghongpeng.github.io/ruban.github.io/post-images/1594309786962.png)\n\n部署好的[网站](https://zenghongpeng.github.io/hexo.github.io/)\n[源码](https://github.com/zenghongpeng/archive/tree/master/hexo-docs)\n\n\n\n\n\n\n\n\n\n\n\n\n",
      "data": {
        "title": "静态博客生成器 - Hexo",
        "date": "2020-07-09 18:45:01",
        "tags": [],
        "published": true,
        "hideInList": false,
        "feature": null,
        "isTop": false
      },
      "isEmpty": false,
      "excerpt": "",
      "abstract": "",
      "fileName": "jing-tai-bo-ke-sheng-cheng-qi-hexo"
    },
    {
      "content": "从14年来北京，那时候总想着写点什么程序，幻想着一朝成名，结果眼睛一闭一睁，5年过去了，哎，当初的抱负呢，当初的梦想呢！！哎。。。\n\nGridea 关注一段时间了，确实是个好东西，突发奇想要不自己也弄一个试试，结果苦思冥想，参阅无数代码，还是毫无头绪，在这定个计划吧，督促一下自己。\n\n[ ] 分析市面上的静态博客生成器\n    [x]  Gridea\n    [ ]  Hexo\n    [ ]  Jekyll\n    [ ]  VuePress\n    [ ]  Nuxt.js\n[ ] 动手开发\n\n待续。。。",
      "data": {
        "title": "给自己找点事做吧！！",
        "date": "2020-07-09 18:29:20",
        "tags": [],
        "published": true,
        "hideInList": false,
        "feature": null,
        "isTop": false
      },
      "isEmpty": false,
      "excerpt": "",
      "abstract": "",
      "fileName": "gei-zi-ji-zhao-dian-shi-zuo-ba"
    },
    {
      "content": "> 欢迎来到我的小站呀，很高兴遇见你！🤝\n\n## 🏠 关于本站\n\n## 👨‍💻 博主是谁\n\n## ⛹ 兴趣爱好\n\n## 📬 联系我呀\n",
      "data": {
        "title": "关于",
        "date": "2019-01-25 19:09:48",
        "tags": [],
        "published": true,
        "hideInList": true,
        "feature": null,
        "isTop": false
      },
      "isEmpty": false,
      "excerpt": "",
      "abstract": "",
      "fileName": "about"
    },
    {
      "content": "👏  欢迎使用 **Gridea** ！  \n✍️  **Gridea** 一个静态博客写作客户端。你可以用它来记录你的生活、心情、知识、笔记、创意... ... \n\n<!-- more -->\n\n[Github](https://github.com/getgridea/gridea)  \n[Gridea 主页](https://gridea.dev/)  \n[示例网站](http://fehey.com/)\n\n## 特性👇\n📝  你可以使用最酷的 **Markdown** 语法，进行快速创作  \n\n🌉  你可以给文章配上精美的封面图和在文章任意位置插入图片  \n\n🏷️  你可以对文章进行标签分组  \n\n📋  你可以自定义菜单，甚至可以创建外部链接菜单  \n\n💻  你可以在 **Windows**，**MacOS** 或 **Linux** 设备上使用此客户端  \n\n🌎  你可以使用 **𝖦𝗂𝗍𝗁𝗎𝖻 𝖯𝖺𝗀𝖾𝗌** 或 **Coding Pages** 向世界展示，未来将支持更多平台  \n\n💬  你可以进行简单的配置，接入 [Gitalk](https://github.com/gitalk/gitalk) 或 [DisqusJS](https://github.com/SukkaW/DisqusJS) 评论系统  \n\n🇬🇧  你可以使用**中文简体**或**英语**  \n\n🌁  你可以任意使用应用内默认主题或任意第三方主题，强大的主题自定义能力  \n\n🖥  你可以自定义源文件夹，利用 OneDrive、百度网盘、iCloud、Dropbox 等进行多设备同步  \n\n🌱 当然 **Gridea** 还很年轻，有很多不足，但请相信，它会不停向前 🏃\n\n未来，它一定会成为你离不开的伙伴\n\n尽情发挥你的才华吧！\n\n😘 Enjoy~\n",
      "data": {
        "title": "Hello Gridea",
        "date": "2018-12-12 00:00:00",
        "tags": [
          "Gridea"
        ],
        "published": true,
        "hideInList": false,
        "feature": "/post-images/hello-gridea.png",
        "isTop": false
      },
      "isEmpty": false,
      "excerpt": "",
      "abstract": "👏  欢迎使用 **Gridea** ！  \n✍️  **Gridea** 一个静态博客写作客户端。你可以用它来记录你的生活、心情、知识、笔记、创意... ... ",
      "fileName": "hello-gridea"
    }
  ],
  "tags": [
    {
      "name": "Gridea",
      "slug": "fWqJrfu2p",
      "used": true
    }
  ],
  "menus": [
    {
      "link": "/",
      "name": "首页",
      "openType": "Internal"
    },
    {
      "link": "/archives",
      "name": "归档",
      "openType": "Internal"
    },
    {
      "link": "/tags",
      "name": "标签",
      "openType": "Internal"
    },
    {
      "link": "/post/about",
      "name": "关于",
      "openType": "Internal"
    }
  ]
}